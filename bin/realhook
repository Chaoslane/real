const server = require('../app');
const Log = require('log');
const log = new Log('info');
const cluster = require('cluster');


const rhconf = require('../conf/realhook.json');
const port = rhconf.realhook.stat_port || 3000;

// if (cluster.isMaster){
//     for (let i = 0, n = 8; i < n; i += 1){
//         cluster.fork();
//     }
// }else {
//     server.listen(port);
// }

server.listen(port);
server.on('error', onError);
server.on('listening', onListening);

/**
 * Event listener for HTTP server "error" event.
 */
function onError(error) {
    if (error.syscall !== 'listen') {
        throw error;
    }
    const bind = typeof port === 'string'
        ? 'Pipe ' + port
        : 'Port ' + port;
    // handle specific listen errors with friendly messages
    switch (error.code) {
        case 'EACCES':
            log.error(bind + ' requires elevated privileges');
            process.exit(1);
            break;
        case 'EADDRINUSE':
            log.error(bind + ' is already in use');
            process.exit(1);
            break;
        default:
            throw error;
    }
}

/**
 * Event listener for HTTP server "listening" event.
 */
function onListening() {
    const addr = server.address();
    const bind = typeof addr === 'string'
        ? 'pipe ' + addr
        : 'port ' + addr.port;
    log.info('Realhook listening on ' + bind);
}